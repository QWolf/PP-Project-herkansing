import Sprockell.System

prog :: [Instruction]
prog = [	Compute NEq SPID Zero RegE,
	Branch RegE (Abs 9),
	Write Zero (Addr 0),
	Write Zero (Addr 1),
	Write Zero (Addr 2),
	Write Zero (Addr 3),
	Const 1 RegE,
	Write RegE (Addr 0),
	Jump (Abs 14),
	Const 1 RegE,
	Read (Addr 0),
	Receive RegD,
	Compute NEq RegE RegD RegD,
	Branch RegD (Rel (-3)),
	Compute NEq SPID Zero RegE,
	Branch RegE (Abs 19),
	Const 1 RegE,
	Write RegE (Addr 1),
	Jump (Abs 43),
	Const 1 RegE,
	Read (Addr 1),
	Receive RegD,
	Compute NEq RegE RegD RegD,
	Branch RegD (Rel (-3)),
	Const 0 RegD,
	Store RegD (Addr 0),
	Nop,
	Load (Addr 0) RegD,
	Const 20 RegE,
	Compute Lt RegD RegE RegE,
	Branch RegE (Abs 32),
	Jump (Abs 37),
	Nop,
	Load (Addr 0) RegE,
	Compute Incr RegE RegE RegE,
	Store RegE (Addr 0),
	Jump (Abs 26),
	Nop,
	Const 2 RegE,
	Write RegE (Addr 1),
	Read (Addr 0),
	Receive RegE,
	EndProg,
	Nop,
	Const 0 RegD,
	Store RegD (Addr 0),
	Nop,
	Load (Addr 0) RegD,
	Const 0 RegC,
	Compute Lt RegD RegC RegC,
	Branch RegC (Abs 52),
	Jump (Abs 57),
	Nop,
	Load (Addr 0) RegC,
	Compute Incr RegC RegC RegC,
	Store RegC (Addr 0),
	Jump (Abs 46),
	Nop,
	Read (Addr 0),
	Receive RegE,
	EndProg,
	 Nop]

main = run 2 prog >> putChar '\n'
