import Sprockell.System

prog :: [Instruction]
prog = [	Write Zero (Addr 0),
	Write Zero (Addr 1),
	Write Zero (Addr 2),
	Const 0 RegE,
	Write RegE (Addr 3),
	Const 1 RegE,
	Store RegE (Addr 0),
	TestAndSet (Addr 1),
	Receive RegE,
	Branch RegE (Rel 2),
	Jump (Rel (-3)),
	Write SPID (Addr 2),
	Load (Addr 0) RegE,
	Const 1 RegD,
	Compute Equal RegE RegD RegD,
	Branch RegD (Rel 12),
	Const 102 RegD,
	Write RegD (Addr 16777216),
	Const 97 RegD,
	Write RegD (Addr 16777216),
	Const 108 RegD,
	Write RegD (Addr 16777216),
	Const 115 RegD,
	Write RegD (Addr 16777216),
	Const 101 RegD,
	Write RegD (Addr 16777216),
	Jump (Rel 9),
	Const 116 RegD,
	Write RegD (Addr 16777216),
	Const 114 RegD,
	Write RegD (Addr 16777216),
	Const 117 RegD,
	Write RegD (Addr 16777216),
	Const 101 RegD,
	Write RegD (Addr 16777216),
	Const 10 RegD,
	Write RegD (Addr 16777216),
	Read (Addr 0),
	Receive RegD,
	Write Zero (Addr 1),
	TestAndSet (Addr 1),
	Receive RegD,
	Branch RegD (Rel 2),
	Jump (Rel (-3)),
	Write SPID (Addr 2),
	Read (Addr 3),
	Receive RegD,
	Const 0 RegE,
	Compute Equal RegD RegE RegE,
	Branch RegE (Rel 12),
	Const 102 RegE,
	Write RegE (Addr 16777216),
	Const 97 RegE,
	Write RegE (Addr 16777216),
	Const 108 RegE,
	Write RegE (Addr 16777216),
	Const 115 RegE,
	Write RegE (Addr 16777216),
	Const 101 RegE,
	Write RegE (Addr 16777216),
	Jump (Rel 9),
	Const 116 RegE,
	Write RegE (Addr 16777216),
	Const 114 RegE,
	Write RegE (Addr 16777216),
	Const 117 RegE,
	Write RegE (Addr 16777216),
	Const 101 RegE,
	Write RegE (Addr 16777216),
	Const 10 RegE,
	Write RegE (Addr 16777216),
	Read (Addr 0),
	Receive RegE,
	Write Zero (Addr 1),
	TestAndSet (Addr 1),
	Receive RegE,
	Branch RegE (Rel 2),
	Jump (Rel (-3)),
	Write SPID (Addr 2),
	Read (Addr 3),
	Receive RegE,
	Const 0 RegD,
	Compute Equal RegE RegD RegD,
	Branch RegD (Rel 12),
	Const 102 RegD,
	Write RegD (Addr 16777216),
	Const 97 RegD,
	Write RegD (Addr 16777216),
	Const 108 RegD,
	Write RegD (Addr 16777216),
	Const 115 RegD,
	Write RegD (Addr 16777216),
	Const 101 RegD,
	Write RegD (Addr 16777216),
	Jump (Rel 9),
	Const 116 RegD,
	Write RegD (Addr 16777216),
	Const 114 RegD,
	Write RegD (Addr 16777216),
	Const 117 RegD,
	Write RegD (Addr 16777216),
	Const 101 RegD,
	Write RegD (Addr 16777216),
	Const 10 RegD,
	Write RegD (Addr 16777216),
	Read (Addr 0),
	Receive RegD,
	Write Zero (Addr 1),
	Const 1 RegD,
	Branch RegD (Rel 2),
	Jump (Abs 279),
	Const 2 RegD,
	Store RegD (Addr 4),
	TestAndSet (Addr 1),
	Receive RegD,
	Branch RegD (Rel 2),
	Jump (Rel (-3)),
	Write SPID (Addr 2),
	Read (Addr 3),
	Receive RegD,
	Const 0 RegE,
	Compute Equal RegD RegE RegE,
	Branch RegE (Rel 12),
	Const 102 RegE,
	Write RegE (Addr 16777216),
	Const 97 RegE,
	Write RegE (Addr 16777216),
	Const 108 RegE,
	Write RegE (Addr 16777216),
	Const 115 RegE,
	Write RegE (Addr 16777216),
	Const 101 RegE,
	Write RegE (Addr 16777216),
	Jump (Rel 9),
	Const 116 RegE,
	Write RegE (Addr 16777216),
	Const 114 RegE,
	Write RegE (Addr 16777216),
	Const 117 RegE,
	Write RegE (Addr 16777216),
	Const 101 RegE,
	Write RegE (Addr 16777216),
	Const 10 RegE,
	Write RegE (Addr 16777216),
	Read (Addr 0),
	Receive RegE,
	Write Zero (Addr 1),
	TestAndSet (Addr 1),
	Receive RegE,
	Branch RegE (Rel 2),
	Jump (Rel (-3)),
	Write SPID (Addr 2),
	Load (Addr 0) RegE,
	Const 1 RegD,
	Compute Equal RegE RegD RegD,
	Branch RegD (Rel 12),
	Const 102 RegD,
	Write RegD (Addr 16777216),
	Const 97 RegD,
	Write RegD (Addr 16777216),
	Const 108 RegD,
	Write RegD (Addr 16777216),
	Const 115 RegD,
	Write RegD (Addr 16777216),
	Const 101 RegD,
	Write RegD (Addr 16777216),
	Jump (Rel 9),
	Const 116 RegD,
	Write RegD (Addr 16777216),
	Const 114 RegD,
	Write RegD (Addr 16777216),
	Const 117 RegD,
	Write RegD (Addr 16777216),
	Const 101 RegD,
	Write RegD (Addr 16777216),
	Const 10 RegD,
	Write RegD (Addr 16777216),
	Read (Addr 0),
	Receive RegD,
	Write Zero (Addr 1),
	TestAndSet (Addr 1),
	Receive RegD,
	Branch RegD (Rel 2),
	Jump (Rel (-3)),
	Write SPID (Addr 2),
	Load (Addr 0) RegD,
	Const 1 RegE,
	Compute Equal RegD RegE RegE,
	Branch RegE (Rel 12),
	Const 102 RegE,
	Write RegE (Addr 16777216),
	Const 97 RegE,
	Write RegE (Addr 16777216),
	Const 108 RegE,
	Write RegE (Addr 16777216),
	Const 115 RegE,
	Write RegE (Addr 16777216),
	Const 101 RegE,
	Write RegE (Addr 16777216),
	Jump (Rel 9),
	Const 116 RegE,
	Write RegE (Addr 16777216),
	Const 114 RegE,
	Write RegE (Addr 16777216),
	Const 117 RegE,
	Write RegE (Addr 16777216),
	Const 101 RegE,
	Write RegE (Addr 16777216),
	Const 10 RegE,
	Write RegE (Addr 16777216),
	Read (Addr 0),
	Receive RegE,
	Write Zero (Addr 1),
	TestAndSet (Addr 1),
	Receive RegE,
	Branch RegE (Rel 2),
	Jump (Rel (-3)),
	Write SPID (Addr 2),
	Load (Addr 4) RegE,
	Const 2 RegD,
	Compute Equal RegE RegD RegD,
	Branch RegD (Rel 12),
	Const 102 RegD,
	Write RegD (Addr 16777216),
	Const 97 RegD,
	Write RegD (Addr 16777216),
	Const 108 RegD,
	Write RegD (Addr 16777216),
	Const 115 RegD,
	Write RegD (Addr 16777216),
	Const 101 RegD,
	Write RegD (Addr 16777216),
	Jump (Rel 9),
	Const 116 RegD,
	Write RegD (Addr 16777216),
	Const 114 RegD,
	Write RegD (Addr 16777216),
	Const 117 RegD,
	Write RegD (Addr 16777216),
	Const 101 RegD,
	Write RegD (Addr 16777216),
	Const 10 RegD,
	Write RegD (Addr 16777216),
	Read (Addr 0),
	Receive RegD,
	Write Zero (Addr 1),
	TestAndSet (Addr 1),
	Receive RegD,
	Branch RegD (Rel 2),
	Jump (Rel (-3)),
	Write SPID (Addr 2),
	Load (Addr 4) RegD,
	Const 2 RegE,
	Compute Equal RegD RegE RegE,
	Branch RegE (Rel 12),
	Const 102 RegE,
	Write RegE (Addr 16777216),
	Const 97 RegE,
	Write RegE (Addr 16777216),
	Const 108 RegE,
	Write RegE (Addr 16777216),
	Const 115 RegE,
	Write RegE (Addr 16777216),
	Const 101 RegE,
	Write RegE (Addr 16777216),
	Jump (Rel 9),
	Const 116 RegE,
	Write RegE (Addr 16777216),
	Const 114 RegE,
	Write RegE (Addr 16777216),
	Const 117 RegE,
	Write RegE (Addr 16777216),
	Const 101 RegE,
	Write RegE (Addr 16777216),
	Const 10 RegE,
	Write RegE (Addr 16777216),
	Read (Addr 0),
	Receive RegE,
	Write Zero (Addr 1),
	Nop,
	Read (Addr 0),
	Receive RegE,
	EndProg,
	 Nop]

main = run 1 prog >> putChar '\n'
